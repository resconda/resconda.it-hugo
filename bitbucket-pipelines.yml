#  Template Go (Golang) build

#  This template allows you to validate your Go (Golang) code.
#  The workflow allows running tests, build and code linting on the default branch.

definitions:
  steps:
    - step: &prebuild
        image: "golang:1.18"
        name: "Build searchdb with go"
        script:
          - | # build search db
            cd scripts/go/searchdb_builder
            go mod tidy && go build || exit 1
            cd -
            ./scripts/go/searchdb_builder/searchdb ./content
        artifacts:
          - contents.sqlite
    - step: &build
        image: klakegg/hugo:0.105.0-ext
        name: Build Hugo
        script:
          - | # build Hugo site
            if [[ "${BITBUCKET_BRANCH}" != "master" ]]; then
              DEBUG="-D"
            fi
            hugo $DEBUG
        artifacts:
          - public/**
    - step: &deploy
        image: instrumentisto/rsync-ssh
        name: Deploy to server
        deployment: staging
        script:
          - | # place search db into public folder
            mkdir -p public/cgi/res
            cp contents.sqlite public/cgi/res/
          - | # deploy public folder
            if [[ ! "${HETZNER_DEPLOYPATH}" =~ "/home/${HETZNER_SSH_USER}/.*" ]]; then
              echo "${HETZNER_DEPLOYPATH} is not a valid folder. Aborting"
              exit 1
            fi
            rsync -e 'ssh -p 44367' -vru --delete public/ ${HETZNER_SSH_USER}@${HETZNER_HOST}:${HETZNER_DEPLOYPATH}/
          - | # deploy searchdb_server container
            ssh -p 44367 ${HETZNER_SSH_USER}@${HETZNER_HOST} "mkdir -p /tmp/seachdb_server"
            rsync -e 'ssh -p 44367' -vru --delete scripts/go/searchdb_server/ ${HETZNER_SSH_USER}@${HETZNER_HOST}:/tmp/searchdb_server/
            ssh -p 44367 ${HETZNER_SSH_USER}@${HETZNER_HOST} "cd /tmp/searchdb_server && \
              export CONTENTS_SQLITE_DBPATH=${HETZNER_DEPLOYPATH}/cgi/res/contents.sqlite && \
              docker-compose down && docker-compose up -d
pipelines:
  branches:
    master:
      - step: *prebuild
      - step: *build
      - step:
          <<: *deploy
          deployment: production
  default:
    - step: *prebuild
    - step: *build
    - step: *deploy
# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PUBLIC_HTML: ${{ github.ref == 'refs/heads/main' && '/home/resconda/resconda.it/resconda.it-hugo' || '/home/resconda/resconda.it/staging' }}
  PUBLIC_URL: ${{ github.ref == 'refs/heads/main' && 'https://resconda.it' || 'https://resconda.it:44443' }}

jobs:
  build_searchdb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'

      - name: Build
        run: |
          cd scripts/go/searchdb_builder
          go mod tidy && go build
      
      - name: Run
        run: scripts/go/searchdb_builder/searchdb contents/

      - name: Archive output DB
        uses: actions/upload-artifact@v3
        with:
          name: searchdb
          path: |
            contents.sqlite
      # Not needed right now
      # - name: Test
      #   run: go test -v ./...
  
  build_hugo:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.117.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ env.PUBLIC_URL }}/" \
            -d dist
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist

  deploy:
    needs: [build_searchdb, build_hugo]
    runs-on: self-hosted
    steps:
      - name: Download server code and deploy to PUBLIC_HTML
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.PUBLIC_HTML }}
      - name: Download searchdb sqlite file and deploy to PUBLIC_HTML/cgi/res
        uses: actions/download-artifact@v3
        with:
          name: searchdb
          path: ${{ env.PUBLIC_HTML }}/cgi/res
# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  STAGING: ${{ github.ref == 'refs/heads/main' && '0' || '1' }}

jobs:
  build_searchdb:
    if: false # switch off for now
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build builder
        run: |
          cd scripts/go/searchdb_builder
          go mod tidy && go build
      
      - name: Run builder and stash the generated DB file
        run: |
          scripts/go/searchdb_builder/searchdb content/
      
      - name: Pick searchdb_server code to be used later
        uses: actions/upload-artifact@v3
        with:
          name: searchdb_server_src
          path: scripts/go/searchdb_server
      - name: Archive output DB and server executable
        uses: actions/upload-artifact@v3
        with:
          name: searchdb
          path: |
            contents.sqlite

      # Not needed right now
      # - name: Test
      #   run: go test -v ./...
  
  build_hugo:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.134.1
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
          PUBLIC_URL: ${{ env.STAGING == '0' && 'https://resconda.it' || 'https://resconda.it:44443' }}
        run: |
          hugo \
            --minify \
            --baseURL "${{ env.PUBLIC_URL }}/" \
            -d dist
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist

  deploy:
    environment: ${{ github.branch_name == 'main' && 'production' || 'staging' }}
    needs:
      - build_hugo
      # - build_searchdb 
    runs-on: self-hosted
    steps:
      - name: Cleanup deploy folder PUBLIC_HTML
        run: rm -rf $PUBLIC_HTML && mkdir -p $PUBLIC_HTML
      - name: Download server code
        uses: actions/download-artifact@v4.1.7
        with:
          name: dist
          path: ${{ env.PUBLIC_HTML }}
      ## Unstable search stuff
      # - name: Download sqlite DB file and deploy to PUBLIC_HTML/cgi/
      #   env:
      #     PUBLIC_HTML: ${{ env.STAGING == '0' && '/home/resconda/resconda.it/resconda.it-hugo' || '/home/resconda/resconda.it/staging' }}
      #   uses: actions/download-artifact@v4.1.7
      #   with:
      #     name: searchdb
      #     path: ${{ env.PUBLIC_HTML }}/cgi/res
      # - name: Download searchdb_server code to the CWD
      #   uses: actions/download-artifact@v4.1.7
      #   with:
      #     name: searchdb_server_src
      # - name: build and run searchdb server
      #   env:
      #     PUBLIC_HTML: ${{ env.STAGING == '0' && '/home/resconda/resconda.it/resconda.it-hugo' || '/home/resconda/resconda.it/staging' }}
      #     GIN_MODE: ${{ env.STAGING == '0' && 'release' || 'debug' }}
      #   run: |
      #     GO=/usr/local/go/bin/go
      #     $GO mod tidy && $GO build -o ${{ env.PUBLIC_HTML }}/cgi/searchdb_server && \
      #     ${{ env.PUBLIC_HTML }}/cgi/searchdb_server &
